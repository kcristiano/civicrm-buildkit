#!/usr/bin/env bash
set -e

## Example usage:
##
## $ env CIVI_REPO=civicrm-core ghprbTargetBranch=master ghprbPullId=28104 run-bknix-job --mock dfl Generic-Style
## $ env CIVI_REPO=civicrm-backdrop ghprbTargetBranch=1.x-master ghprbPullId=159 run-bknix-job --mock dfl Generic-Style
## $ env CIVI_REPO=civicrm-drupal ghprbTargetBranch=7.x-master ghprbPullId=673 run-bknix-job --mock dfl Generic-Style

#################################################
## Environment variables

## EXECUTOR_NUMBER: The number of this concurrent process
## WORKSPACE: The path where Jenkins stores data for this job
## ghprbTargetBranch: The version of CiviCRM to install, expressed as a branch or tag (e.g. `master`, `5.59`, `5.57.0`)
## ghprbPullId: The pull request to apply
## CIVI_REPO: The name of the github repo (`civicrm-core`, `civicrm-packages`, etc)
assert_common EXECUTOR_NUMBER WORKSPACE ghprbPullId ghprbTargetBranch CIVI_REPO

detect_civiver "$CIVI_REPO" "$ghprbTargetBranch"
assert_testable_version "$CIVIVER"

#################################################
## Main

use_bknix_tmp

## Build definition
assert_common BKITBLD EXECUTOR_NUMBER
BLDNAME="build-$EXECUTOR_NUMBER"
BLDDIR="$BKITBLD/$BLDNAME"

## Reset (cleanup after previous tests)
clean_legacy_workspace "$WORKSPACE/checkstyle"
init_std_workspace
if [ -d "$BKITBLD/$BLDNAME" ]; then
  echo y | civibuild destroy "$BLDNAME"
fi

## Report details about the test environment
civibuild env-info

## Download dependencies, apply patches
civibuild download "$BLDNAME" --type "empty"
cloneCmd=$(printf 'git_cache_clone civicrm/%q -b %q src' "$CIVI_REPO" "$ghprbTargetBranch")
civibuild run "$BLDNAME" --eval "$cloneCmd"
civibuild run "$BLDNAME" --eval 'git_cache_deref_remotes "$CACHE_DIR" "$WEB_ROOT"'

pushd "$BLDDIR/web/src"
  git scan am -N "https://github.com/civicrm/$CIVI_REPO/pull/${ghprbPullId}"
  xcivilint "origin/$ghprbTargetBranch" "$CIVI_REPO""#""${ghprbPullId}"
popd
